(in-package #:kslgui)

(export 'w)
(defmacro w (&body body)
  (when (null body)
        (return-from w 'nil))
  (let* ((ignored '())
         (disposed '())
         (forms (mapcar (lambda (form)
                          (let ((res-sym (gensym)))
                            (cond
                             ((and (consp form) (eq 'quote (first form)))
                               (push res-sym ignored)
                               `(,res-sym ,(second form)))
                             (t (push `(funcall ,res-sym) disposed)
                                `(,res-sym ,form)))))
                    body)))
    `(let ,(mapcar (lambda (form) `(,(first form) ,(second form))) forms)
       (declare (ignore ,@ignored))
       (lambda ()
         ,@disposed
         (values)))))
